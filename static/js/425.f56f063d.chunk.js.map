{"version":3,"file":"static/js/425.f56f063d.chunk.js","mappings":"yOACA,EAA8B,+BAA9B,EAA2E,+BAA3E,EAAyH,gCAAzH,EAAwK,gCAAxK,EAAuN,gCAAvN,EAAuQ,iC,SCsFvQ,EA7EkB,WAEhB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAGMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAQD,OACE,gBAAKC,UAAWC,EAAhB,UAGE,kBACED,UAAWC,EACXC,SAbe,SAAAC,GACnBA,EAAEC,iBACFjB,GAASkB,EAAAA,EAAAA,IAAe,CAAEb,MAAAA,EAAOE,SAAAA,KACjCD,EAAS,IACTE,EAAY,GACb,EASKW,aAAa,KAHf,WAME,eAAIN,UAAWC,EAAf,2CACA,mBAAOD,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXH,KAAK,QACLS,KAAK,QACLC,UAAQ,EACRF,aAAa,KACbG,YAAY,iBACZV,MAAOP,EACPkB,SAAUd,QAId,mBAAOI,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EAEXM,KAAK,WACLT,KAAK,WAELQ,aAAa,MACbG,YAAY,gBACZV,MAAOL,EACPgB,SAAUd,QAId,mBACEI,UAAWC,EACXM,KAAK,SACLI,MAAO,CAAEC,KAAMvB,GAHjB,wBAUP,C","sources":["webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login__page\":\"LoginPage_login__page__J3ZOD\",\"login__form\":\"LoginPage_login__form__QUIbO\",\"login__title\":\"LoginPage_login__title__ngRub\",\"login__label\":\"LoginPage_login__label__3MOpf\",\"login__input\":\"LoginPage_login__input__eJZ5k\",\"login__button\":\"LoginPage_login__button__TT4BI\"};","import { useState } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { authLoginThunk } from 'redux/auth/auth.operations';\n// import { selectAuthStatus } from 'redux/auth/auth.selectors';\n// import { toast } from 'react-toastify';\n// import { Loader } from 'components/Loader/Loader';\nimport css from './LoginPage.module.css';\n\n\nconst LoginPage = () => {\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // const [isPass, setIsPass] = useState(true);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authLoginThunk({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n \n  return (\n    <div className={css.login__page}>\n      {/* {status === 'loading' && <Loader />} */}\n\n      <form\n        className={css.login__form}\n        onSubmit={handleSubmit}\n        autoComplete=\"on\"\n        \n      >\n        <h2 className={css.login__title}>Please Log in Your Phonebook</h2>\n        <label className={css.login__label}>\n          Email\n          <input\n            className={css.login__input}\n            name=\"email\"\n            type=\"email\"\n            required\n            autoComplete=\"on\"\n            placeholder=\"name@email.com\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={css.login__label}>\n          Password\n          <input\n            className={css.login__input}\n            // type={isPassword ? \"password\" : \"text\"}\n            type=\"password\"\n            name=\"password\"\n           \n            autoComplete=\"off\"\n            placeholder=\"your password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button\n          className={css.login__button}\n          type=\"submit\"\n          state={{ from: location }}\n        >\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n\n\n\n// const initialState = {\n//   email: '',\n//   password: '',\n// };\n//  const [values, setValues] = useState(initialState);\n\n//  const dispatch = useDispatch();\n//  const status = useSelector(selectAuthStatus);\n\n//  const handleChange = event => {\n//    const { value, name } = event.target;\n//    setValues(prev => ({ ...prev, [name]: value }));\n//  };\n\n//  const handleSubmit = async event => {\n//    event.preventDefault();\n\n//    try {\n//      await dispatch(authLoginThunk(values)).unwrap();\n//      toast.success('Success!');\n//    } catch (error) {\n//      console.log(error);\n//      toast.error('Some error');\n//    }\n\n//    setValues(initialState);\n//  };\n"],"names":["dispatch","useDispatch","location","useLocation","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","css","onSubmit","e","preventDefault","authLoginThunk","autoComplete","type","required","placeholder","onChange","state","from"],"sourceRoot":""}