{"version":3,"file":"static/js/406.5fff5327.chunk.js","mappings":"0OACA,EAAiC,qCAAjC,EAAwF,sCAAxF,EAA+I,qCAA/I,EAAsM,sCAAtM,EAA8P,sCAA9P,EAAuT,uCAAvT,EAAkX,wC,SCmHlX,EAzGqB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACpB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAGMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAUC,OACE,gBAAKC,UAAWC,EAAhB,UAGE,kBACED,UAAWC,EAIXC,SAjBa,SAAAC,GACnBA,EAAEC,iBACFhB,GAASiB,EAAAA,EAAAA,IAAS,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAYOU,aAAa,KANf,WASE,eAAIN,UAAWC,EAAf,6BAEA,mBAAOD,UAAWC,EAAlB,2BAEE,kBACED,UAAWC,EAEXV,KAAK,QACLgB,KAAK,QAELC,YAAY,iBACZT,MAAON,EACPgB,SAAUZ,QAKd,mBAAOG,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EAEXV,KAAK,OACLgB,KAAK,OACLG,QAAQ,yHAERF,YAAY,OACZT,MAAOR,EACPkB,SAAUZ,QAKd,mBAAOG,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EAEXV,KAAK,WACLgB,KAAK,WACLI,UAAQ,EACRL,aAAa,MACbP,MAAOJ,EACPc,SAAUZ,QASd,SAAC,KAAD,CAAMG,UAAWC,EAAuBW,GAAG,SAA3C,mCAIA,mBAAQZ,UAAWC,EAAsBM,KAAK,SAA9C,yBAMP,C","sources":["webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"register__page\":\"RegisterPage_register__page__tIaUB\",\"register__title\":\"RegisterPage_register__title__AO9MI\",\"register__form\":\"RegisterPage_register__form__TcRd2\",\"register__label\":\"RegisterPage_register__label__zFOau\",\"register__input\":\"RegisterPage_register__input__x9R1t\",\"register__button\":\"RegisterPage_register__button__Xnxvk\",\"register__tologin\":\"RegisterPage_register__tologin__WlEYz\"};","// import { publicApi } from '../../services/api';\nimport { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/auth.operations';\nimport { Link } from 'react-router-dom';\n// import { toast } from 'react-toastify';\n// import { Loader } from '../../components/Loader/Loader';\nimport css from './RegisterPage.module.css';\n\n\nconst RegisterPage = () => {\n   const dispatch = useDispatch();\nconst [name, setName] = useState('');\nconst [email, setEmail] = useState('');\nconst [password, setPassword] = useState('');\n// const [isPass, setIsPass] = useState(true);\n\nconst handleChange = ({ target: { name, value } }) => {\n  switch (name) {\n    case 'name':\n      return setName(value);\n    case 'email':\n      return setEmail(value);\n    case 'password':\n      return setPassword(value);\n    default:\n      return;\n  }\n};\n\nconst handleSubmit = e => {\n  e.preventDefault();\n  dispatch(register({ name, email, password }));\n  setName('');\n  setEmail('');\n  setPassword('');\n};\n\n  return (\n    <div className={css.register__page}>\n      {/* {isLoading && <Loader />} */}\n\n      <form\n        className={css.register__form}\n        // action=\"#\"\n        // className=\"mt-5 mx-auto p-0\"\n        // style={{ width: '450px' }}\n        onSubmit={handleSubmit}\n        autoComplete=\"on\"\n        \n      >\n        <h1 className={css.register__title}>Please Sign In</h1>\n\n        <label className={css.register__label}>\n          Email address\n          <input\n            className={css.register__input}\n            // id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            //   autoComplete=\"username\"\n            placeholder=\"name@email.com\"\n            value={email}\n            onChange={handleChange}\n            // className=\"form-control\"\n          />\n        </label>\n\n        <label className={css.register__label}>\n          Name\n          <input\n            className={css.register__input}\n            // id=\"first_name\"\n            name=\"name\"\n            type=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // autoComplete=\"off\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={handleChange}\n            // className=\"form-control\"\n          />\n        </label>\n\n        <label className={css.register__label}>\n          Password\n          <input\n            className={css.register__input}\n            // id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            required\n            autoComplete=\"off\"\n            value={password}\n            onChange={handleChange}\n            // className=\"form-control\"\n          />\n        </label>\n\n        {/* <button type=\"submit\" onClick={() => setIsPass(prev => !prev)}>\n          toggle\n        </button> */}\n\n        <Link className={css.register__tologin} to=\"/login\">\n          Already has account?\n        </Link>\n\n        <button className={css.register__button} type=\"submit\">\n          Sign In\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n\n\n\n\n\n\n// const year = new Date().getFullYear();\n// const initialState = {\n//   name: '',\n//   email: '',\n//   password: '',\n// };\n\n// const RegisterPage = () => {\n//   const dispatch = useDispatch();\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [values, setValues] = useState(initialState);\n\n//   //   const [isPass, setIsPass] = useState(true);\n\n//   const handleChange = event => {\n//     const { name, value } = event.currentTarget;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async event => {\n//     event.preventDefault();\n\n//     try {\n//       setIsLoading(true);\n//       await publicApi.post('/users/signup', values);\n//       await dispatch(\n//         authLoginThunk({ email: values.email, password: values.password })\n//       ).unwrap();\n\n//       setIsLoading(false);\n//       toast.success('Success!');\n//     } catch (error) {\n//       console.log(error);\n//       toast.error('Some error');\n//     }\n//     setValues(initialState);\n//   };\n"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","className","css","onSubmit","e","preventDefault","register","autoComplete","type","placeholder","onChange","pattern","required","to"],"sourceRoot":""}